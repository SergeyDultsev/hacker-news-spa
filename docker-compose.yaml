version: '3.9'

services:
  backend:
    build: ./backend
    container_name: backend
    restart: always
    ports:
      - '3000:3000'
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
      - redis
    networks:
      - HN
    command: npm run start

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - '5173:5173'
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - HN
    command: npm run dev

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - HN

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    environment:
      - REDIS_USER=${REDIS_USER}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - '6379:6379'
    volumes:
      - ./redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

volumes:
  db_data:
  redis_data:

networks:
  HN: